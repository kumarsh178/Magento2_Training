type Query {
    blogDetails (
        blog_id: Int @doc(description: "Search Docs List.")
    ): BlogDetails @resolver(class: "Custom\\PracticeGraphql\\Model\\Resolver\\BlogDetails") @doc(description: "Return details about a Blog Details.")
    blogList: [BlogDetails] @resolver(class: "Custom\\PracticeGraphql\\Model\\Resolver\\BlogList") @doc(description: "Return details about a Blog Details.")
}
type BlogDetails {
    post_id: Int @doc(description: "The ID of a Post page.")
    name: String @doc(description: "The Post name.")
    url_key: String @doc(description: "Url Key.")
    post_content: String @doc(description: "Post Content")
    status: Int @doc(description: "Blog Status")
}
type Mutation {
    createPost(
        input: createPostInput!
        @doc(description: "An input object that contains changes related to the posts.")
    ): Posts
        @resolver(class: "Custom\\PracticeGraphql\\Model\\Resolver\\CreatePost")
        @doc(description: "Create or update a post.")
}
input createPostInput @doc(description: "Contains details about the posts.") {
    name: String!
    post_content: String!
    url_key: String
    tags: String
    status: Int
}
type Posts @doc(description: "Return Success/Error Message.") {
   message:String @doc(description: "Return Success/Error Message.")
}
